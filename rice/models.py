from djongo import models


class General(models.Model):
    ricevarieties  = models.CharField(max_length=100)
    varietiesApproved = models.CharField(max_length=100, blank=True)
    samplePlantedArea = models.CharField(max_length=100, blank=True)
    yearProduction = models.CharField(max_length=100, blank=True)
    seasonProduction = models.CharField(max_length=100, blank=True)
    typeGrainAnalyzed = models.CharField(max_length=100, blank=True)
    organicProduction = models.CharField(max_length=100, blank=True)
    yearAnalysis = models.CharField(max_length=100, blank=True)
    siteAnalysis = models.CharField(max_length=100, blank=True)
    dataSource = models.CharField(max_length=100, blank=True)
    
    class Meta:
        abstract = True


class Rice(models.Model):
    id = models.CharField(max_length=100, primary_key=True)
    nameTh = models.CharField(max_length=100)
    nameEn = models.CharField(max_length=100, null=True, blank=True)
    certified  = models.CharField(max_length=10, null=True, blank=True)
    province = models.CharField(max_length=100, null=True, blank=True)
    year = models.CharField(max_length=10, null=True, blank=True)
    season = models.CharField(max_length=50, null=True, blank=True)
    Type = models.CharField(max_length=100, null=True, blank=True)
    typeorganic = models.CharField(max_length=100, null=True, blank=True)
    analysisyear = models.CharField(max_length=50, null=True, blank=True)
    analysisfacility = models.CharField(max_length=100, null=True, blank=True)
    source = models.CharField(max_length=100, null=True, blank=True)

    
    def __str__(self):
        return self.nameTh

class Rice_Bio(models.Model):
    ID = models.CharField(max_length=100, primary_key=True)
    Rice_Varieties= models.CharField(max_length=100)
    Tocopherol_Alpha_M = models.CharField(max_length=50)
    Tocopherol_Alpha_U = models.CharField(max_length=50)
    Tocopherol_Alpha = models.CharField(max_length=50)
    Tocopherol_Beta_M = models.CharField(max_length=50)
    Tocopherol_Beta_U = models.CharField(max_length=50)
    Tocopherol_Beta = models.CharField(max_length=50)
    Tocopherol_Gamma_M = models.CharField(max_length=50)
    Gamma_tocopherol_M = models.CharField(max_length=50)
    Tocopherol_Gamma_U = models.CharField(max_length=50)
    Tocopherol_Gamma = models.CharField(max_length=50)
    Tocopherol_Sigma_M = models.CharField(max_length=50)
    Tocopherol_Sigma_U = models.CharField(max_length=50)
    Tocopherol_Delta_M = models.CharField(max_length=50)
    Tocopherol_Delta_U = models.CharField(max_length=50)
    Tocotrienol_Alpha_M = models.CharField(max_length=50)
    Tocotrienol_Alpha_U = models.CharField(max_length=50)
    Tocotrienol_Beta_M = models.CharField(max_length=50)
    Tocotrienol_Beta_U = models.CharField(max_length=50)
    Tocotrienol_Gamma_M_mg = models.CharField(max_length=50)
    Tocotrienol_Gamma_M = models.CharField(max_length=50)
    Tocotrienol_Gamma_U = models.CharField(max_length=50)
    Tocotrienol_Sigma_M = models.CharField(max_length=50)
    Tocotrienol_Sigma_U = models.CharField(max_length=50)
    Tocotrienol_Delta_M = models.CharField(max_length=50)
    Tocotrienol_Delta_U = models.CharField(max_length=50)
    Prolamine = models.CharField(max_length=50)
    Albumin = models.CharField(max_length=50)
    Globulin = models.CharField(max_length=50)
    Glutenin = models.CharField(max_length=50)
    Omega_3 = models.CharField(max_length=50) 
    Omega_6 = models.CharField(max_length=50) 
    Omega_9 = models.CharField(max_length=50)
    Tryptophan_M = models.CharField(max_length=50)
    Tryptophan_U = models.CharField(max_length=50)
    Threonine_M = models.CharField(max_length=50)
    Threonine_U = models.CharField(max_length=50)
    Isoleucine_M = models.CharField(max_length=50)
    Isoleucine_U = models.CharField(max_length=50)
    Leucine_M = models.CharField(max_length=50)
    Leucine_U = models.CharField(max_length=50)
    Lysine_M = models.CharField(max_length=50)
    Lysine_U = models.CharField(max_length=50)
    Methionine_M = models.CharField(max_length=50)
    Methionine_U = models.CharField(max_length=50)
    Cystine_M = models.CharField(max_length=50) 
    Cystine_U = models.CharField(max_length=50)
    Phenylalanine_M = models.CharField(max_length=50) 
    Phenylalanine_U = models.CharField(max_length=50)
    Tyrosine_M = models.CharField(max_length=50)
    Tyrosine_U = models.CharField(max_length=50)
    Valine_M = models.CharField(max_length=50)
    Valine_U = models.CharField(max_length=50)
    Arginnine_M = models.CharField(max_length=50)
    Arginnine_U = models.CharField(max_length=50)
    Histidine_M = models.CharField(max_length=50)
    Histidine_U = models.CharField(max_length=50)
    Alanine_M = models.CharField(max_length=50)
    Alanine_U = models.CharField(max_length=50)
    Aspartic_acid_M = models.CharField(max_length=50)
    Aspartic_acid_U = models.CharField(max_length=50)
    Glutamic_acid_M = models.CharField(max_length=50)
    Glutamic_acid_U = models.CharField(max_length=50)
    Glycine_M = models.CharField(max_length=50)
    Glycine_U = models.CharField(max_length=50)
    Proline_M = models.CharField(max_length=50)
    Proline_U = models.CharField(max_length=50)
    Serine_M = models.CharField(max_length=50)
    Serine_U = models.CharField(max_length=50)
    Cerine_M = models.CharField(max_length=50)
    Cerine_U = models.CharField(max_length=50)
    Ethyl_alcohol = models.CharField(max_length=50)
    Caffeine = models.CharField(max_length=50)
    Theobromine = models.CharField(max_length=50)
    Beta_carotene  = models.CharField(max_length=50)
    Alpha_carotene = models.CharField(max_length=50)
    Beta_cryptoxanthin = models.CharField(max_length=50)
    Lycopene = models.CharField(max_length=50)
    Lutein_Zeaxanthin = models.CharField(max_length=50)
    Biotin_U = models.CharField(max_length=50)
    Gamma_Oryzanol_M = models.CharField(max_length=50)
    Gamma_Oryzanol_U = models.CharField(max_length=50)
    Phenolic_compounds = models.CharField(max_length=50)
    Total_Antioxidant_M  = models.CharField(max_length=50)
    Total_Antioxidant_U = models.CharField(max_length=50)
    Total_Antioxidant_M_Tr = models.CharField(max_length=50)
    Total_Antioxidant = models.CharField(max_length=50)
    Antioxidant_compounds = models.CharField(max_length=50)
    Gallic_acid_M = models.CharField(max_length=50)
    Gallic_acid = models.CharField(max_length=50)
    Eriodictyol_M = models.CharField(max_length=50)
    Eriodictyol = models.CharField(max_length=50)
    Anthocyanin = models.CharField(max_length=50)
    Apigenin_M = models.CharField(max_length=50)
    Apigenin  = models.CharField(max_length=50)
    Isoquercetin_M = models.CharField(max_length=50)
    Isoquercetin = models.CharField(max_length=50)
    Hydroquinin_M = models.CharField(max_length=50)
    Hydroquinin = models.CharField(max_length=50)
    Quercetin_M  = models.CharField(max_length=50)
    Quercetin  = models.CharField(max_length=50)
    Kaempferol_M = models.CharField(max_length=50)
    Kaempferol = models.CharField(max_length=50)
    Rutin_M = models.CharField(max_length=50)
    Rutin = models.CharField(max_length=50)
    Catechin_M  = models.CharField(max_length=50)
    Catechin  = models.CharField(max_length=50)
    Tannic_acid_M  = models.CharField(max_length=50)
    Tannic_acid  = models.CharField(max_length=50)
    Flavonoid  = models.CharField(max_length=50)
    GABA_gamma_Aminobutyric_acid = models.CharField(max_length=50)
    Total_Tocopherol = models.CharField(max_length=50)
    Genistein = models.CharField(max_length=50)
    Daidzien = models.CharField(max_length=50)
    Genistin = models.CharField(max_length=50)
    Daidzin = models.CharField(max_length=50)
    Quercitin3BDGlucoside = models.CharField(max_length=50)
    Peonidin3Oglucoside = models.CharField(max_length=50)
    Oenin = models.CharField(max_length=50)



    def __str__(self):
        return self.ID



class Rice_Qc(models.Model):
    group= models.CharField(max_length=100)
    column_name = models.CharField(max_length=50)
    title = models.CharField(max_length=50)
    type_rice = models.CharField(max_length=50)
    title_En = models.CharField(max_length=50)
    rice_categories = models.CharField(max_length=50)
    units_1 = models.CharField(max_length=50)
    units_2 = models.CharField(max_length=50)

class Nutrition(models.Model):
    ID = models.CharField(max_length=50, primary_key=True)
    ricevarietiesTH  = models.CharField(max_length=100)
    water = models.CharField(max_length=100)
    carbohydrate_Milled = models.CharField(max_length=100)
    carbohydrate_Unpolished = models.CharField(max_length=100)
    starch_Milled = models.CharField(max_length=100)
    starch_Unpolished = models.CharField(max_length=100)
    protein_Milled = models.CharField(max_length=100)
    protein_Unpolished = models.CharField(max_length=100)
    totalFat_Milled = models.CharField(max_length=100)
    totalFat_Unpolished = models.CharField(max_length=100)
    saturatedFat_Milled = models.CharField(max_length=100)
    saturatedFat_Unpolished = models.CharField(max_length=100)
    totalEnergy_Milled = models.CharField(max_length=100)
    totalEnergy_Unpolished = models.CharField(max_length=100)
    energyFat_Milled = models.CharField(max_length=100)
    energyFat_Unpolished = models.CharField(max_length=100)
    fiber_dietaryFiber_Milled = models.CharField(max_length=100)
    fiber_dietaryFiber_Unpolished = models.CharField(max_length=100)
    crudeFiber_Milled = models.CharField(max_length=100)
    crudeFiber_Unpolished = models.CharField(max_length=100)
    totalSugar_Milled = models.CharField(max_length=100)
    totalSugar_Unpolished = models.CharField(max_length=100)
    ferulicAcid_Milled = models.CharField(max_length=100)
    ferulicAcid_Unpolished = models.CharField(max_length=100)
    ferulicAcid_GerminatedUnpolished = models.CharField(max_length=100) 
    calcium_Milled = models.CharField(max_length=100)
    calcium_Unpolished = models.CharField(max_length=100)
    iron_Milled = models.CharField(max_length=100)
    iron_Unpolished = models.CharField(max_length=100)
    magnesium_Milled = models.CharField(max_length=100)
    magnesium_Unpolished = models.CharField(max_length=100)
    phosphorus_Milled = models.CharField(max_length=100) 
    phosphorus_Unpolished = models.CharField(max_length=100) 
    potassium_Milled = models.CharField(max_length=100) 
    potassium_Unpolished = models.CharField(max_length=100) 
    sodium_Milled = models.CharField(max_length=100) 
    sodium_Unpolished = models.CharField(max_length=100) 
    zinc_Milled = models.CharField(max_length=100) 
    zinc_Unpolished = models.CharField(max_length=100) 
    iodine = models.CharField(max_length=100)
    copper_Milled = models.CharField(max_length=100) 
    copper_Unpolished = models.CharField(max_length=100) 
    manganese_Milled = models.CharField(max_length=100) 
    manganese_Unpolished = models.CharField(max_length=100) 
    selenium = models.CharField(max_length=100) 
    aluminium_Milled = models.CharField(max_length=100) 
    aluminium_Unpolished = models.CharField(max_length=100) 
    vitaminC = models.CharField(max_length=100)
    thiamine = models.CharField(max_length=100)
    niacin_Milled = models.CharField(max_length=100)
    niacin_Unpolished = models.CharField(max_length=100)
    pantothenicAcid = models.CharField(max_length=100)
    vitaminB1_Milled = models.CharField(max_length=100)
    vitaminB1_Unpolished = models.CharField(max_length=100)
    vitaminB2_Milled = models.CharField(max_length=100) 
    vitaminB2_Unpolished = models.CharField(max_length=100) 
    riboflavin = models.CharField(max_length=100) 
    vitaminB3 = models.CharField(max_length=100) 
    vitaminB4 = models.CharField(max_length=100) 
    vitaminB5 = models.CharField(max_length=100) 
    vitaminB6 = models.CharField(max_length=100)
    allFolate = models.CharField(max_length=100) 
    folicAcid = models.CharField(max_length=100)
    foodFolate = models.CharField(max_length=100) 
    DFE_Folate = models.CharField(max_length=100) 
    vitaminB12 = models.CharField(max_length=100)
    vitaminA = models.CharField(max_length=100) 
    vitaminA_IU = models.CharField(max_length=100)
    vitaminA_RAE = models.CharField(max_length=100)
    retinol = models.CharField(max_length=100)
    vitaminE_Milled = models.CharField(max_length=100)
    vitaminE_Unpolished = models.CharField(max_length=100) 
    anthocyanin = models.CharField(max_length=100) 
    betaCarotene = models.CharField(max_length=100)
    vitaminE_alphaTocopherol = models.CharField(max_length=100)
    vitaminK_phylloquinone = models.CharField(max_length=100) 
    saturatedFattyAcid = models.CharField(max_length=100)
    monosaturatedFattyAcid = models.CharField(max_length=100)
    polysaturatedFattyAcid = models.CharField(max_length=100)
    cholesterol = models.CharField(max_length=100)



class Physical(models.Model):
    ID = models.CharField(max_length=50, primary_key=True)
    ricevarietiesTH  = models.CharField(max_length=100)
    seedWeights = models.CharField(max_length=100)
    length = models.CharField(max_length=100)
    width = models.CharField(max_length=100)
    thickness = models.CharField(max_length=100)
    huskColor = models.CharField(max_length=100)
    grainLength = models.CharField(max_length=100)
    grainWidth = models.CharField(max_length=100) 
    grainThickness = models.CharField(max_length=100) 
    aleuroneLayerColor = models.CharField(max_length=100)
    seedShape = models.CharField(max_length=100)
    chalkiness = models.CharField(max_length=100)
    gloss = models.CharField(max_length=100)
    whiteness = models.CharField(max_length=100)
    transparency = models.CharField(max_length=100)
    moisture_Milled = models.CharField(max_length=100)
    moisture_Unpolished = models.CharField(max_length=100)
    elongationRatio = models.CharField(max_length=100)
    swelling = models.CharField(max_length=100)
    texture = models.CharField(max_length=100)
    peckViscosity = models.CharField(max_length=100)
    trough = models.CharField(max_length=100)
    breakdown = models.CharField(max_length=100)
    finalViscosity = models.CharField(max_length=100)
    setback = models.CharField(max_length=100)
    pastingTemperature = models.CharField(max_length=100)
    gelatinizationTemperature = models.CharField(max_length=100)
    riceFlourViscosity = models.CharField(max_length=100)
    precipitation = models.CharField(max_length=100)
    retrogradation = models.CharField(max_length=100)
    gelation = models.CharField(max_length=100)
    gelConsistency = models.CharField(max_length=100)
    swellingPower = models.CharField(max_length=100)
    hardness = models.CharField(max_length=100)
    adhesiveness = models.CharField(max_length=100)
    stickiness = models.CharField(max_length=100)

class Chemical(models.Model):
    ID = models.CharField(max_length=50, primary_key=True)
    ricevarietiesTH  = models.CharField(max_length=100)
    amylose = models.CharField(max_length=100)
    solubleAmyloseContent = models.CharField(max_length=100)
    NA = models.CharField(max_length=50, blank=True)
    _2APcontent = models.CharField(max_length=100)
    Alkali = models.CharField(max_length=100)
    RAG_Milled = models.CharField(max_length=100)
    RAG_Unpolished = models.CharField(max_length=100)
    SAG_Milled = models.CharField(max_length=100)
    SAG_Unpolished = models.CharField(max_length=100)
    TG_Milled = models.CharField(max_length=100)
    TG_Unpolished = models.CharField(max_length=100)
    Ash_Milled = models.CharField(max_length=100)
    Ash_Unpolished = models.CharField(max_length=100)

class Bioactive(models.Model):
    ID = models.CharField(max_length=50, primary_key=True)
    ricevarietiesTH  = models.CharField(max_length=100)
    tocopherolAlpha_Milled = models.CharField(max_length=100) 
    tocopherolAlpha_Unpolished = models.CharField(max_length=100) 
    tocopherolAlpha = models.CharField(max_length=100) 
    tocopherolBeta_Milled = models.CharField(max_length=100) 
    tocopherolBeta_Unpolished = models.CharField(max_length=100) 
    tocopherolBeta = models.CharField(max_length=100) 
    tocopherolGamma_Milled = models.CharField(max_length=100) 
    gammaTocopherol_Milled = models.CharField(max_length=100) 
    tocopherolGamma_Unpolished = models.CharField(max_length=100) 
    tocopherolGamma = models.CharField(max_length=100) 
    tocopherolSigma_Milled = models.CharField(max_length=100) 
    tocopherolSigma_Unpolished = models.CharField(max_length=100) 
    tocopherolDelta_Milled = models.CharField(max_length=100) 
    tocopherolDelta_Unpolished = models.CharField(max_length=100) 
    tocotrienolAlpha_Milled = models.CharField(max_length=100) 
    tocotrienolAlpha_Unpolished = models.CharField(max_length=100) 
    tocotrienolBeta_Milled = models.CharField(max_length=100) 
    tocotrienolBeta_Unpolished = models.CharField(max_length=100) 
    tocotrienolGamma_Milled_U1 = models.CharField(max_length=100) 
    tocotrienolGamma_Milled = models.CharField(max_length=100) 
    tocotrienolGamma_Unpolished = models.CharField(max_length=100) 
    tocotrienolSigma_Milled = models.CharField(max_length=100) 
    tocotrienolSigma_Unpolished = models.CharField(max_length=100) 
    tocotrienolDelta_Milled = models.CharField(max_length=100) 
    tocotrienolDelta_Unpolished = models.CharField(max_length=100) 
    prolamine = models.CharField(max_length=100) 
    albumin = models.CharField(max_length=100) 
    globulin = models.CharField(max_length=100) 
    glutenin = models.CharField(max_length=100) 
    omega3 = models.CharField(max_length=100) 
    omega6 = models.CharField(max_length=100) 
    omega9 = models.CharField(max_length=100) 
    tryptophan_Milled = models.CharField(max_length=100) 
    tryptophan_Unpolished = models.CharField(max_length=100) 
    threonine_Milled = models.CharField(max_length=100)  
    threonine_Unpolished = models.CharField(max_length=100)  
    isoleucine_Milled = models.CharField(max_length=100) 
    isoleucine_Unpolished = models.CharField(max_length=100) 
    leucine_Milled = models.CharField(max_length=100) 
    leucine_Unpolished = models.CharField(max_length=100) 
    lysine_Milled = models.CharField(max_length=100) 
    lysine_Unpolished = models.CharField(max_length=100) 
    methionine_Milled = models.CharField(max_length=100)  
    methionine_Unpolished = models.CharField(max_length=100)  
    cystine_Milled = models.CharField(max_length=100) 
    cystine_Unpolished = models.CharField(max_length=100)  
    phenylalanine_Milled = models.CharField(max_length=100) 
    phenylalanine_Unpolished = models.CharField(max_length=100)  
    tyrosine_Milled = models.CharField(max_length=100) 
    tyrosine_Unpolished = models.CharField(max_length=100) 
    valine_Milled = models.CharField(max_length=100) 
    valine_Unpolished = models.CharField(max_length=100) 
    arginnine_Milled = models.CharField(max_length=100) 
    arginnine_Unpolished = models.CharField(max_length=100) 
    histidine_Milled = models.CharField(max_length=100) 
    histidine_Unpolished = models.CharField(max_length=100) 
    alanine_Milled = models.CharField(max_length=100) 
    alanine_Unpolished = models.CharField(max_length=100) 
    asparticAcid_Milled = models.CharField(max_length=100) 
    asparticAcid_Unpolished = models.CharField(max_length=100) 
    glutamicAcid_Milled = models.CharField(max_length=100) 
    glutamicAcid_Unpolished = models.CharField(max_length=100) 
    glycine_Milled = models.CharField(max_length=100) 
    glycine_Unpolished = models.CharField(max_length=100) 
    proline_Milled = models.CharField(max_length=100) 
    proline_Unpolished = models.CharField(max_length=100) 
    serine_Milled = models.CharField(max_length=100) 
    serine_Unpolished = models.CharField(max_length=100) 
    cerine_Milled = models.CharField(max_length=100) 
    cerine_Unpolished = models.CharField(max_length=100) 
    ethylAlcohol = models.CharField(max_length=100) 
    caffeine = models.CharField(max_length=100) 
    theobromine = models.CharField(max_length=100) 
    betaCarotene = models.CharField(max_length=100)  
    alphaCarotene = models.CharField(max_length=100) 
    betaCryptoxanthin = models.CharField(max_length=100) 
    lycopene = models.CharField(max_length=100) 
    luteinZeaxanthin = models.CharField(max_length=100) 
    biotin_Unpolished = models.CharField(max_length=100) 
    gammaOryzanol_Milled = models.CharField(max_length=100) 
    gammaOryzanol_Unpolished = models.CharField(max_length=100) 
    phenolicCompounds = models.CharField(max_length=100) 
    totalAntioxidant_Milled_U1 = models.CharField(max_length=100) 
    totalAntioxidant_Unpolished = models.CharField(max_length=100) 
    totalAntioxidant_Milled_U2 = models.CharField(max_length=100) 
    totalAntioxidant = models.CharField(max_length=100) 
    antioxidantCompounds = models.CharField(max_length=100) 
    gallicAcid_Milled = models.CharField(max_length=100) 
    gallicAcid = models.CharField(max_length=100) 
    eriodictyol_Milled = models.CharField(max_length=100) 
    eriodictyol = models.CharField(max_length=100) 
    anthocyanin = models.CharField(max_length=100) 
    apigenin_Milled = models.CharField(max_length=100) 
    apigenin = models.CharField(max_length=100)  
    isoquercetin_Milled = models.CharField(max_length=100) 
    isoquercetin = models.CharField(max_length=100) 
    hydroquinin_Milled = models.CharField(max_length=100) 
    hydroquinin = models.CharField(max_length=100) 
    quercetin_Milled = models.CharField(max_length=100) 
    quercetin = models.CharField(max_length=100)  
    kaempferol_Milled = models.CharField(max_length=100) 
    kaempferol = models.CharField(max_length=100) 
    rutin_Milled = models.CharField(max_length=100) 
    rutin = models.CharField(max_length=100) 
    catechin_Milled = models.CharField(max_length=100) 
    catechin = models.CharField(max_length=100) 
    tannicAcid_Milled = models.CharField(max_length=100) 
    tannicAcid = models.CharField(max_length=100)  
    flavonoid = models.CharField(max_length=100)  
    GABAgammaAminobutyricAcid = models.CharField(max_length=100)  
    